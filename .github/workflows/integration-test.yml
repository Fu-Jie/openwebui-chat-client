name: Integration Test

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      base_url:
        description: 'OpenWebUI Base URL (optional override)'
        required: false
        default: ''
      auth_token:
        description: 'OpenWebUI Auth Token (optional override)'
        required: false
        default: ''
      default_model:
        description: 'Default Model ID (optional override)'
        required: false
        default: ''
      parallel_models:
        description: 'Parallel Models (optional override)'
        required: false
        default: ''
      run_all_tests:
        description: 'Run all integration tests (ignore selective testing)'
        required: false
        type: boolean
        default: false

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    # Only run if the test workflow succeeded or for direct triggers
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    outputs:
      required-tests: ${{ steps.detect.outputs.tests }}
      should-run-all: ${{ steps.detect.outputs.run-all }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for git diff
        # For workflow_run events, checkout the actual commit that triggered the workflow
        ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies for detection
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML

    - name: Detect required integration tests
      id: detect
      env:
        # Pass workflow_run context to the detection script
        WORKFLOW_RUN_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        WORKFLOW_RUN_HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        GITHUB_EVENT_NAME: ${{ github.event_name }}
      run: |
        # Determine if we should run all tests
        if [ "${{ github.event.inputs.run_all_tests }}" = "true" ]; then
          echo "run-all=true" >> $GITHUB_OUTPUT
          echo "tests=[\"notes_api\",\"basic_chat\",\"rag_integration\",\"model_management\",\"model_switching\",\"comprehensive_demos\",\"connectivity\",\"continuous_conversation\"]" >> $GITHUB_OUTPUT
          echo "‚úÖ Manual override: Running all integration tests"
        else
          echo "run-all=false" >> $GITHUB_OUTPUT
          
          # Debug information for workflow_run events
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "üîç Workflow run context:"
            echo "  - Head SHA: ${{ github.event.workflow_run.head_sha }}"
            echo "  - Head Branch: ${{ github.event.workflow_run.head_branch }}" 
            echo "  - Event: ${{ github.event.workflow_run.event }}"
          fi
          
          # Use our detection script to determine required tests
          required_tests=$(python .github/scripts/detect_required_tests.py)
          echo "tests=$required_tests" >> $GITHUB_OUTPUT
          echo "üîç Detected required tests: $required_tests"
        fi

  integration-test:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.required-tests != '[]' }}
    strategy:
      matrix:
        test-category: ${{ fromJson(needs.detect-changes.outputs.required-tests) }}
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        # Install optional dependencies for full demo functionality
        pip install pillow python-dotenv PyYAML || echo "Optional dependencies failed to install"

    - name: Check Environment Variables
      env:
        OUI_BASE_URL: ${{ (github.event.inputs.base_url != '' && github.event.inputs.base_url) || secrets.OUI_BASE_URL }}
        OUI_AUTH_TOKEN: ${{ (github.event.inputs.auth_token != '' && github.event.inputs.auth_token) || secrets.OUI_AUTH_TOKEN }}
        OUI_DEFAULT_MODEL: ${{ (github.event.inputs.default_model != '' && github.event.inputs.default_model) || secrets.OUI_DEFAULT_MODEL || 'gpt-4.1' }}
        OUI_PARALLEL_MODELS: ${{ (github.event.inputs.parallel_models != '' && github.event.inputs.parallel_models) || secrets.OUI_PARALLEL_MODELS || 'gpt-4.1,gpt-4o' }}
      run: |
        echo "Checking integration test environment for category: ${{ matrix.test-category }}"
        echo "Base URL: ${OUI_BASE_URL:-'not set'}"
        echo "Auth Token: ${OUI_AUTH_TOKEN:+'set':-'not set'}"
        echo "Default Model: ${OUI_DEFAULT_MODEL:-'not set'}"
        echo "Parallel Models: ${OUI_PARALLEL_MODELS:-'not set'}"
        
        if [ -z "$OUI_BASE_URL" ] || [ -z "$OUI_AUTH_TOKEN" ]; then
          echo "‚ùå Missing required repository secrets for integration testing."
          echo ""
          echo "To enable automatic integration tests, set these repository secrets:"
          echo "  - OUI_BASE_URL: Your OpenWebUI instance URL (required)"
          echo "  - OUI_AUTH_TOKEN: Your API authentication token (required)"
          echo "  - OUI_DEFAULT_MODEL: A valid model ID (optional, defaults to 'gpt-4.1')"
          echo "  - OUI_PARALLEL_MODELS: Comma-separated models (optional, defaults to 'gpt-4.1,gpt-4o')"
          echo ""
          echo "Or use workflow_dispatch to override with custom values."
          echo ""
          echo "Skipping integration tests."
          exit 0
        fi
        
        echo "‚úÖ All required environment variables are set."

    - name: Run Selected Integration Test
      env:
        OUI_BASE_URL: ${{ (github.event.inputs.base_url != '' && github.event.inputs.base_url) || secrets.OUI_BASE_URL }}
        OUI_AUTH_TOKEN: ${{ (github.event.inputs.auth_token != '' && github.event.inputs.auth_token) || secrets.OUI_AUTH_TOKEN }}
        OUI_DEFAULT_MODEL: ${{ (github.event.inputs.default_model != '' && github.event.inputs.default_model) || secrets.OUI_DEFAULT_MODEL || 'gpt-4.1' }}
        OUI_PARALLEL_MODELS: ${{ (github.event.inputs.parallel_models != '' && github.event.inputs.parallel_models) || secrets.OUI_PARALLEL_MODELS || 'gpt-4.1,gpt-4o' }}
        OUI_MULTIMODAL_MODEL: ${{ (github.event.inputs.default_model != '' && github.event.inputs.default_model) || secrets.OUI_DEFAULT_MODEL || 'gpt-4.1' }}
        OUI_RAG_MODEL: ${{ (github.event.inputs.default_model != '' && github.event.inputs.default_model) || secrets.OUI_DEFAULT_MODEL || 'gpt-4.1' }}
      run: |
        echo "üß™ Running integration test for category: ${{ matrix.test-category }}"
        python .github/scripts/run_all_integration_tests.py --category ${{ matrix.test-category }} --verbose

  integration-test-summary:
    runs-on: ubuntu-latest
    needs: [detect-changes, integration-test]
    if: always() && needs.detect-changes.outputs.required-tests != '[]'
    
    steps:
    - name: Integration Test Summary
      run: |
        echo "üéâ Selective integration testing completed!"
        echo ""
        echo "Changed files triggered these test categories:"
        echo '${{ needs.detect-changes.outputs.required-tests }}' | jq -r '.[]' | while read category; do
          echo "  ‚úÖ $category"
        done
        echo ""
        if [ "${{ needs.detect-changes.outputs.should-run-all }}" = "true" ]; then
          echo "‚ÑπÔ∏è  All tests were run due to manual override."
        else
          echo "‚ÑπÔ∏è  Only relevant tests were run based on changed files."
          echo "üí° To run all tests manually:"
          echo "   Use workflow_dispatch with 'run_all_tests' = true"
          echo "   Or run locally: python .github/scripts/run_all_integration_tests.py"
        fi
