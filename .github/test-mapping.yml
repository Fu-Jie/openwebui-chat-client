# Configuration file mapping source code files/directories to integration test categories
# This is used by GitHub Actions to run only relevant integration tests for changed files
#
# 📋 使用说明:
# 1. 添加新功能时，在 file_mappings 中添加对应的文件模式和测试类别
# 2. 文件模式支持 glob 语法 (**, *, ?)
# 3. 一个文件模式可以映射到多个测试类别
# 4. 测试类别必须在 test_categories 中预先定义

# Integration test categories and their corresponding test commands
test_categories:
  notes_api:
    name: "Notes API Integration Test"
    command: "python examples/notes_api/basic_notes.py"
    description: "Tests notes CRUD operations and API functionality"
    
  prompts_api:
    name: "Prompts API Integration Test"
    command: "python examples/prompts_api/basic_prompts.py"
    description: "Tests prompts CRUD operations, variables, and management functionality"
    
  basic_chat:
    name: "Basic Usage Integration Test"
    command: "python examples/getting_started/basic_chat.py"
    description: "Tests basic chat functionality and client initialization"
    
  rag_integration:
    name: "RAG Integration Test"
    command: "python examples/rag_knowledge/file_rag.py"
    description: "Tests RAG (Retrieval Augmented Generation) with files"
    
  model_management:
    name: "Model Management Integration Test"
    command: "python examples/model_management/model_operations.py"
    description: "Tests model CRUD operations and management"
    
  model_switching:
    name: "Model Switch Integration Test"
    command: "python examples/chat_features/model_switching.py"
    description: "Tests model switching functionality in existing chats"
    
  comprehensive_demos:
    name: "Comprehensive Demos Test"
    command: "python examples/getting_started/quick_start.py"
    description: "Tests comprehensive feature integration and workflows"
    
  connectivity:
    name: "Basic Connectivity Test"
    command: "python -c \"from openwebui_chat_client import OpenWebUIClient; import os; import sys; client = OpenWebUIClient(os.getenv('OUI_BASE_URL'), os.getenv('OUI_AUTH_TOKEN'), os.getenv('OUI_DEFAULT_MODEL')); models = client.list_models(); print(f'✅ Connected. Found {len(models) if models else 0} models.') if models is not None else sys.exit(1)\""
    description: "Tests basic client connectivity and authentication"
    
  continuous_conversation:
    name: "Continuous Conversation Integration Test"
    command: "python examples/advanced_features/continuous_conversation.py"
    description: "Tests continuous conversation features including multi-turn dialogues, follow-up suggestions, and advanced conversation management"

  deep_research:
    name: "Deep Research Agent Integration Test"
    command: "python examples/advanced_features/deep_research_example.py"
    description: "Tests the autonomous deep research agent with intelligent model routing"

# File patterns mapped to test categories
# When files matching these patterns change, the corresponding tests will run
file_mappings:
  # Core client functionality - triggers multiple tests
  - pattern: "openwebui_chat_client/openwebui_chat_client.py"
    categories: ["connectivity", "basic_chat", "model_management", "deep_research"]

  - pattern: "openwebui_chat_client/core/base_client.py"
    categories: ["connectivity", "basic_chat"]
    
  # Chat-related functionality - be more specific to avoid prompts conflicts
  - pattern: "openwebui_chat_client/**/*chat*.py"
    categories: ["basic_chat", "model_switching", "comprehensive_demos", "deep_research"]
    
  # Continuous conversation functionality
  - pattern: "**/*continuous*"
    categories: ["continuous_conversation", "comprehensive_demos"]
    
  # Notes API functionality - specific patterns only  
  - pattern: "openwebui_chat_client/modules/notes_manager.py"
    categories: ["notes_api"]
    
  - pattern: "examples/notes_api/**"
    categories: ["notes_api"]
    
  - pattern: "tests/**/test_notes*"
    categories: ["notes_api"]
    
  # Prompts API functionality - specific patterns only
  - pattern: "openwebui_chat_client/modules/prompts_manager.py"
    categories: ["prompts_api"]
    
  - pattern: "examples/prompts_api/**"
    categories: ["prompts_api"]
    
  - pattern: "tests/**/test_prompts*"
    categories: ["prompts_api"]
    
  # RAG and knowledge base functionality - more specific patterns
  - pattern: "openwebui_chat_client/**/*rag*.py"
    categories: ["rag_integration", "comprehensive_demos"]
    
  - pattern: "openwebui_chat_client/**/*knowledge*.py"
    categories: ["rag_integration", "comprehensive_demos"]
    
  - pattern: "examples/rag_knowledge/**"
    categories: ["rag_integration"]
    
  # Model management functionality - more specific patterns
  - pattern: "openwebui_chat_client/modules/model_manager.py"
    categories: ["model_management", "connectivity"]
    
  - pattern: "examples/model_management/**"
    categories: ["model_management"]
    
  - pattern: "examples/chat_features/model_switching.py"
    categories: ["model_switching"]
    
  # Examples - run corresponding integration tests
  - pattern: "examples/getting_started/**"
    categories: ["basic_chat", "comprehensive_demos", "connectivity"]
    
  - pattern: "examples/chat_features/**"
    categories: ["basic_chat", "model_switching"]
    
  - pattern: "examples/advanced_features/**"
    categories: ["continuous_conversation", "comprehensive_demos"]
    
  - pattern: "examples/advanced_features/deep_research_example.py"
    categories: ["deep_research"]

  - pattern: "tests/test_deep_research.py"
    categories: ["deep_research"]

  # Test files - run basic connectivity to ensure changes don't break core functionality
  - pattern: "tests/**"
    categories: ["connectivity"]

  # When core client unit tests change, also run model management integration tests
  - pattern: "tests/test_openwebui_chat_client.py"
    categories: ["connectivity", "model_management"]
    
  # Configuration and workflow changes - run connectivity test
  - pattern: ".github/**"
    categories: ["connectivity"]
    
  - pattern: "pyproject.toml"
    categories: ["connectivity"]
    
  - pattern: "setup.py"
    categories: ["connectivity"]

# Default categories to run when no specific mapping is found
# This ensures that at least basic functionality is tested for any changes
default_categories:
  - "connectivity"
  - "basic_chat"
